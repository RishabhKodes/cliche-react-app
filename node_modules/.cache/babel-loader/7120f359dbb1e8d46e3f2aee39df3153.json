{"ast":null,"code":"var _jsxFileName = \"/home/e33or_assasin/Rishabh/Git/cliche-react-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  deleteItem(id) {\n    const list = [...this.state.list];\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  updateItem(id, event) {\n    const list = [...this.state.list];\n    list.map(item => {\n      if (item.id === id) {\n        return { ...item,\n          complete: !item.complete\n        };\n      } else {\n        return item;\n      }\n    });\n  }\n\n  addItem() {\n    //creating item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; //copy of current list of items\n\n    const list = [...this.state.list]; //add new item\n\n    list.push(newItem); //update state\n\n    this.setState({\n      list,\n      newItem: \" \"\n    });\n  }\n\n  onEditHandle(event) {\n    this.setState({\n      edit: true,\n      id: arguments[0],\n      value: arguments[1]\n    });\n  }\n\n  onUpdateHandle(event) {\n    event.preventDefault();\n    this.setState({\n      list: this.state.list.map(item => {\n        if (item.id === this.state.id) {\n          item['value'] = event.target.updatedItem.value;\n          return item;\n        }\n\n        return item;\n      })\n    });\n    this.setState({\n      edit: false\n    });\n  }\n\n  renderEditForm() {\n    if (this.state.edit) {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onUpdateHandle.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"updatedItem\",\n        className: \"item\",\n        defaultValue: this.state.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"update-add-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, \"Update\"));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }\n    }, this.renderEditForm(), \"Add a Category\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add Category Here\",\n      value: this.state.newItem,\n      onChange: e => this.updateInput(\"newItem\", e.target.value) // onChange={this.state.changeEvent}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.addItem(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, this.state.list.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, item.value, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.deleteItem(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 19\n        }\n      }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.onEditHandle.bind(this, item.id, item.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, \"Update\"));\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/e33or_assasin/Rishabh/Git/cliche-react-app/src/App.js"],"names":["React","Component","App","constructor","props","state","newItem","list","updateInput","key","value","setState","deleteItem","id","updatedList","filter","item","updateItem","event","map","complete","addItem","Math","random","slice","push","onEditHandle","edit","arguments","onUpdateHandle","preventDefault","target","updatedItem","renderEditForm","bind","render","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css'; \n\nclass App extends Component{\n\n  constructor(props){\n      super(props);\n\n\n      this.state={\n\n        newItem:\"\",\n        list:[]\n      }\n  }\n  \n  updateInput(key, value){\n    //update react state\n    this.setState({\n      [key] :value\n    })\n\n  }\n\n  deleteItem(id){\n\n    const list = [...this.state.list];\n\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({list: updatedList});\n  }\n\n  updateItem(id, event) {\n\n    const list = [...this.state.list];\n\n      list.map(item => {\n        if (item.id === id) {\n          return { ...item, complete: !item.complete };\n        } else {\n          return item;\n        }\n      })\n  };\n\n\n  addItem(){\n    //creating item with unique id\n    const newItem={\n      id:1 + Math.random(),\n      value:this.state.newItem.slice()\n    };\n\n\n    //copy of current list of items\n    const list = [...this.state.list];\n\n    //add new item\n    list.push(newItem);\n\n    //update state\n    this.setState({\n      list,\n      newItem:\" \"\n    })\n\n  }\n\n  onEditHandle(event) {\n    this.setState({\n      edit: true,\n      id: arguments[0],\n      value: arguments[1]\n    });\n  }\n\n  onUpdateHandle(event) {\n    event.preventDefault();\n\n    this.setState({\n      list: this.state.list.map(item => {\n        if (item.id === this.state.id) {\n          item['value'] = event.target.updatedItem.value;\n          return item;\n        }\n\n        return item;\n      })\n    });\n\n    this.setState({\n      edit: false\n    });\n  }\n\n  renderEditForm() {\n    if (this.state.edit) {\n      return <form onSubmit={this.onUpdateHandle.bind(this)}>\n        <input type=\"text\" name=\"updatedItem\" className=\"item\" defaultValue={this.state.value} />\n        <button className=\"update-add-item\">Update</button>\n      </form>\n    }\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n     <div> \n     {this.renderEditForm()}\n        Add a Category \n        <br />\n        <input \n          type=\"text\"\n          placeholder=\"Add Category Here\"\n          value={this.state.newItem}\n          onChange = {e => this.updateInput(\"newItem\", e.target.value)}\n          // onChange={this.state.changeEvent}\n        />\n\n        <button \n            onClick={() => this.addItem()}\n        >\n        Add\n        </button>\n        <br />\n\n        <ul>\n          {this.state.list.map(item => {\n              \n              return(\n                <li key={item.id}>\n                  {item.value}\n                  <button\n                  onClick = {() => this.deleteItem(item.id)}\n                  >Delete</button>\n                  <button\n                  onClick = {() => {this.onEditHandle.bind(this, item.id, item.value)}}\n                  >Update</button>\n                </li>\n\n              )\n          })}\n        </ul>\n     </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}