{"ast":null,"code":"var _jsxFileName = \"/Users/akshatvg/Downloads/cliche-react-app-master/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  deleteItem(id) {\n    const list = [...this.state.list];\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  updateItem(id) {\n    // list[0].value = \"Hi\";\n    // list.innerHTML = \"Hi\";\n    const list = [...this.state.list];\n    const newItem = {\n      id: list[0].id,\n      value: list[0].value\n    };\n    console.lo; //update state\n\n    this.setState({\n      list,\n      newItem: \" \"\n    });\n  }\n\n  addItem() {\n    //creating item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; //copy of current list of items\n\n    const list = [...this.state.list]; //add new item\n\n    list.push(newItem); //update state\n\n    this.setState({\n      list,\n      newItem: \" \"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Add a Category\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add Category Here\",\n      value: this.state.newItem,\n      onChange: e => this.updateInput(\"newItem\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.addItem(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, this.state.list.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, item.value, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.deleteItem(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.updateItem(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }, \"Update\"));\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/akshatvg/Downloads/cliche-react-app-master/src/App.js"],"names":["React","Component","App","constructor","props","state","newItem","list","updateInput","key","value","setState","deleteItem","id","updatedList","filter","item","updateItem","console","lo","addItem","Math","random","slice","push","render","e","target","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n\n      newItem: \"\",\n      list: []\n    }\n  }\n\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value\n    })\n\n  }\n\n  deleteItem(id) {\n\n    const list = [...this.state.list];\n\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n\n  updateItem(id) {\n    // list[0].value = \"Hi\";\n    // list.innerHTML = \"Hi\";\n    const list = [...this.state.list];\n    const newItem = {\n      id: list[0].id,\n      value: list[0].value\n    };\nconsole.lo\n    //update state\n    this.setState({\n      list,\n      newItem: \" \"\n    })\n  }\n\n\n  addItem() {\n    //creating item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n\n\n    //copy of current list of items\n    const list = [...this.state.list];\n\n    //add new item\n    list.push(newItem);\n\n    //update state\n    this.setState({\n      list,\n      newItem: \" \"\n    })\n\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          Add a Category\n        <br />\n          <input\n            type=\"text\"\n            placeholder=\"Add Category Here\"\n            value={this.state.newItem}\n            onChange={e => this.updateInput(\"newItem\", e.target.value)}\n          />\n\n          <button\n            onClick={() => this.addItem()}\n          >\n            Add\n        </button>\n          <br />\n\n          <ul>\n            {this.state.list.map(item => {\n\n              return (\n                <li key={item.id}>\n                  {item.value}\n                  <button\n                    onClick={() => this.deleteItem(item.id)}\n                  >Delete</button>\n                  <button\n                    onClick={() => this.updateItem(item.id)}\n                  >Update</button>\n                </li>\n\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}